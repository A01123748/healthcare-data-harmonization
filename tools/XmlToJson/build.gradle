plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs('src/main/java')
        }
        resources {
            srcDirs('src/main/resources')
        }
    }
}

test {
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}

// Reproducible builds.
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

dependencies {
    compile group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.3'
    compile group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.4.2'
    compile group: 'org.json', name: 'json', version: '20201115'

    testImplementation(
        'com.google.code.gson:gson:2.8.6',
        'junit:junit:4.12',
        'org.junit.jupiter:junit-jupiter-api:5.4.2'
    )
    testRuntime(
        'org.junit.jupiter:junit-jupiter-engine:5.4.2',
        'org.junit.vintage:junit-vintage-engine:5.4.2'
    )
}

compileJava {
    dependsOn 'generateXJCClasses'
}

task generateXJCClasses() {
    doLast {
        generateXJCClassesCDARev2()
    }
}

void generateXJCClassesCDARev2() {
    exec {
        workingDir './'
        commandLine 'sh','./genccdarev2classes.sh'
    }
}

//=============================================================================
// Clean - Must remove generated sources.
//=============================================================================
clean {
    delete 'build'
    delete 'lib'
    delete 'src/main/java/com/google/cloud/healthcare/etl/xmltojson/xjcgen/ccdarev2'
    delete fileTree(dir: 'src/main/java/com/google/cloud/healthcare/etl/xmltojson/schemas' , include: '**/*.xsd')
    delete files('gradle/wrapper')
}
