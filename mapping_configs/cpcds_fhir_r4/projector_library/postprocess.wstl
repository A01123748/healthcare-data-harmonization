def Output_Resource(item) {
  var Item : item;
  var HashID (if item.identifier) : II_HashIdentifier(item.identifier[0].value);
  var HashID (if ~item.identifier) : II_HashIdentifier(item);
  if (ID_Reconciliation()) {
    var Item.id : $Hash(item);
    if (item.resourceType = "Provenance") {
      // Constructs a Reconciled ID as an extension; due to lack of identifier attribute in Provenance Resource: https://www.hl7.org/fhir/provenance.html
      var Item.extension[] : Build_ReconciledIDExtension($Hash(item));
    } else {
      var Item.identifier[] : HashID;
    }
  } else {
    var Item.id (if ~item.id) : $Hash(item.identifier[0].value);
  }
  $this : Item;
}

def Build_ReferenceID(resourceType, id) {
    reference : $StrCat(resourceType, "/", id);
}

def Get_ReconciledID(Resource) {
  if (Resource.identifier and $Type(Resource.identifier) = "array") {
    var ReconciledIdentifier : Resource.identifier[where $.system = "urn:oid:google/reconciliation-id"];
    $this : ReconciledIdentifier[0].value;
  } else {
    var ReconciledIdentifier : Resource.extension[where $.url = "reconciliation-id"];
    $this : ReconciledIdentifier[0].extension[0].valueString;
  }
}

def Build_Reference(Resource) {
  var ReconciledID : Get_ReconciledID(Resource);
  if (ID_Reconciliation()) {
    reference : $StrCat(Resource.resourceType, "/", ReconciledID);
  } else {
    reference : $StrCat(Resource.resourceType, "/", Resource.id);
  }
}

def Build_BundleEntry(Resource, Verb) {
  resource : Resource;
  if (~Resource.id?) {
    resource.id : $Hash(Resource);
  }
  request.method : Verb;
  request.url : $StrCat(Resource.resourceType, "/", dest resource.id);
}

def Output_Transaction(Output) {
  var Resources: $Unique(Output.Resources)
  resourceType : "Bundle";
  type : "transaction";
  entry[] : Build_BundleEntry(Resources[], "PUT");
  entry[] : Build_BundleEntry(Output_Resource(Build_Provenance(Resources)), "PUT");
}

def Build_Provenance(required Resources) {
  resourceType : "Provenance";
  recorded : $CurrentTime("2006-01-02T15:04:05.2112Z", "");
  target[] : Build_Reference(Resources[]);
  agent[0].type.coding[0].code : "transmitter";
  agent[0].type.coding[0].system : "http://hl7.org/fhir/us/core/CodeSystem/us-core-provenance-participant-type";
  // An Organization resource will be created to model HPDI Customer
  agent[0].who : Build_ReferenceID("Organization",$UUID());
  entity[0].role : "source";
  // A DocumentReference resource will be created to model input payload
  entity[0].what :  Build_ReferenceID("DocumentReference",$UUID());
}
